// <auto-generated />
using System;
using InsERT.CurrencyApp.WalletService.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InsERT.CurrencyApp.WalletService.DataAccess.Migrations
{
    [DbContext(typeof(WalletDbContext))]
    [Migration("20250623162822_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InsERT.CurrencyApp.WalletService.Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Wallets", (string)null);
                });

            modelBuilder.Entity("InsERT.CurrencyApp.WalletService.Domain.Entities.WalletBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WalletId", "CurrencyCode")
                        .IsUnique();

                    b.ToTable("WalletBalances", (string)null);
                });

            modelBuilder.Entity("InsERT.CurrencyApp.WalletService.Domain.Entities.WalletBalance", b =>
                {
                    b.HasOne("InsERT.CurrencyApp.WalletService.Domain.Entities.Wallet", "Wallet")
                        .WithMany("Balances")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("InsERT.CurrencyApp.WalletService.Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Balances");
                });
#pragma warning restore 612, 618
        }
    }
}
